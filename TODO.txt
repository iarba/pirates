Model: a game contains 1 object
  objects are split into layers based on dependency
    layer0 - world - an ocean made entirely out of water
    layer1 - floater - floats on water - interacts with other floaters
    layer2 - solid - interacts with other solids, move on floaters
    layer3 - attachments

world is gridless - eases movement but makes collision complex - stick to simple shapes
floater is gridded for object placement, but movement is gridless. Objects will allign with target grid

grid - square grid

advantages - seamless movement improves user experience

expected difficulty - unalligned grid interaction

development steps

1. floaters
  1.1 generate grids for floaters                                          V
  1.2 generate bounding box from grid                                      V
  1.3 check for perimeter collision between 2 floaters of abstract shape   V
  1.4 handle collisions between floaters in a fair way                     V
2. viewer
  2.1 create a window
  2.2 create a orthogonal camera
  2.3 render anything
3. solids
  3.1 drag stopped solids onto grid
  3.2 circle/square collision detection between solids on the same floater
  3.3 handle collisions between solids in a fair way
4. duty cycle
  4.1 detect mouse and keyboard input
  4.2 transfer mouse and keyboard input to controller
  4.3 act based on said input
